{"paragraphs":[{"text":"%pyspark\n\nfrom pyspark.mllib.regression import LabeledPoint\nfrom numpy import array\n\n\ncdr_raw_rdd = sc.textFile(\"/data/cdr_trainx_min.csv\")\n\n#Seprerate out the header row versus the data\n\ncdr_header = cdr_raw_rdd.first()\ncdr_data = cdr_raw_rdd.filter(lambda x: x != cdr_header)\n\n#Splits the data\ncdr_data = cdr_data.map(lambda line: line.split(\",\"))\n\n#Do not include the actually destination number\ncdr_data = cdr_data.map(lambda x: x[1:3] + x[4:7])\n\n#Now dataset rows look like this\n#321012,200,11,Dial,normal\n\ndef parse_line(col):\n\n    features = col[0:4]\n    label = col[4]\n    if label == \"fraud\":\n        label = 1.0\n    else:\n        label = 0.0\n        \n    if features[3] == \"Congestion\":\n        features[3] = 1.0\n    else:\n        features[3] = 0.0\n\n    return LabeledPoint(label,array([float(x) for x in features]))\n\n    \ncdr_data_parsed = cdr_data.map(parse_line)\nprint(cdr_data_parsed.take(10))\n\n# Split the Dataset up into training and testing\n\nsplits =cdr_data_parsed.randomSplit([.8,.2])\ncdr_data_training = splits[0]\ncdr_data_test = splits[1]\n\n#cdr_data_training.saveAsTextFile('/data/training_split.csv')\n#cdr_data_test.saveAsTextFile('/data/training_test.csv')\n\n\n\n","user":"anonymous","dateUpdated":"2018-02-12T19:09:42-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python","tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[LabeledPoint(0.0, [1008.0,1000.0,4.0,0.0]), LabeledPoint(0.0, [1008.0,1000.0,4.0,0.0]), LabeledPoint(0.0, [1008.0,1001.0,4.0,0.0]), LabeledPoint(0.0, [1008.0,1001.0,2.0,0.0]), LabeledPoint(0.0, [1008.0,1001.0,2.0,0.0]), LabeledPoint(0.0, [1008.0,1001.0,4.0,0.0]), LabeledPoint(0.0, [1008.0,1000.0,4.0,0.0]), LabeledPoint(0.0, [1008.0,1000.0,4.0,0.0]), LabeledPoint(0.0, [1008.0,1000.0,4.0,0.0]), LabeledPoint(0.0, [1008.0,1000.0,4.0,0.0])]\n"}]},"apps":[],"jobName":"paragraph_1518409197669_-830479719","id":"20180211-231957_1894184548","dateCreated":"2018-02-11T23:19:57-0500","dateStarted":"2018-02-12T19:09:42-0500","dateFinished":"2018-02-12T19:09:42-0500","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:381"},{"text":"%pyspark\nfrom pyspark.mllib.classification import LogisticRegressionWithLBFGS\nfrom time import time\n\n# Build the model\nt0 = time()\nlogit_model = LogisticRegressionWithLBFGS.train(cdr_data_training,iterations=100)\ntt = time() - t0\n\nprint (\"Classifier trained in {} seconds\".format(round(tt,3)))","user":"anonymous","dateUpdated":"2018-02-12T19:09:49-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Classifier trained in 2.481 seconds\n"}]},"apps":[],"jobName":"paragraph_1518409342055_385542988","id":"20180211-232222_324584532","dateCreated":"2018-02-11T23:22:22-0500","dateStarted":"2018-02-12T19:09:49-0500","dateFinished":"2018-02-12T19:09:51-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:382"},{"text":"%pyspark\n\n\nlabels_and_preds =cdr_data_test.map(lambda p: (p.label, logit_model.predict(p.features)))\nlabels_and_preds.take(5)\n\nsame = labels_and_preds.filter(lambda lp: lp[0] ==lp[1])\n\naccuracy = same.count() / float(cdr_data_test.count())\nprint(\"The test accurary is {} percent\".format(accuracy*100))\n","user":"anonymous","dateUpdated":"2018-02-12T20:55:33-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"The test accurary is 100.0 percent\n"}]},"apps":[],"jobName":"paragraph_1518410980406_438734094","id":"20180211-234940_1069351344","dateCreated":"2018-02-11T23:49:40-0500","dateStarted":"2018-02-12T20:55:33-0500","dateFinished":"2018-02-12T20:55:33-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:383"},{"text":"%pyspark\n\n#Feed in one of the actual CDR records to see if it predicts correctly\n#2014-06-16 19:12:14,1000,11,011525541693260,15,Dial,fraud\naccount_code=1000\nsrc=11\ndst=\"011525541693201\"\ndst_len=len(dst)\n# What happened on the network, 1.0 is Congrestion or 0.0 No network issue \nlast_app=\"0.0\"\n\n#Create a Dense Vector \ntest_features = array([account_code,src,dst_len,last_app])\nprint(test_features)\n\n#Predict\nprediction =  logit_model.predict(test_features)\nprint (prediction)\nif prediction == 1.0:\n    prediction = \"a fraud\"\nelse:\n    prediction = \"valid\"\n    \n# Display Messages\nprint(\"The system predicts that the call is {}\".format(prediction))\n","user":"anonymous","dateUpdated":"2018-02-12T19:11:50-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"['1000' '11' '15' '0.0']\n1\nThe system predicts that the call is a fraud\n"}]},"apps":[],"jobName":"paragraph_1518470112056_130509489","id":"20180212-161512_360215422","dateCreated":"2018-02-12T16:15:12-0500","dateStarted":"2018-02-12T19:11:50-0500","dateFinished":"2018-02-12T19:11:50-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:384"},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2018-02-12T16:42:28-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1518471748808_1108621626","id":"20180212-164228_97025933","dateCreated":"2018-02-12T16:42:28-0500","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:385"}],"name":"Detroit Hacker Nights Complete/Call Fraud Week 4","id":"2D7C8E59Z","angularObjects":{"2D6QTUUE5:shared_process":[],"2D79YJ2H9:shared_process":[],"2D5NTNW2Z:shared_process":[],"2D5DRXUX7:shared_process":[],"2D5GAC1PR:shared_process":[],"2D4HWPZZT:shared_process":[],"2D5BYRJWU:shared_process":[],"2D6YW825N:shared_process":[],"2D4DUWXTP:shared_process":[],"2D4RJBCCZ:shared_process":[],"2D4BQY3NP:shared_process":[],"2D7C8TWWC:shared_process":[],"2D3T28AEC:shared_process":[],"2D58QC2AD:shared_process":[],"2D5CXUGJE:shared_process":[],"2D75AT8F8:shared_process":[],"2D5ZWRZGJ:shared_process":[],"2D6HQ1DFP:shared_process":[],"2D6XCSTHV:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}